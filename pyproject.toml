[tool.poetry]
name = "blueos-docker"
version = "0.0.1"
description = "Blue Robotics BlueOS computer project"
authors = ["software@bluerobotics.com"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.dev-dependencies]
black = "^22.1.0"
isort = "^5.8"
pylint = "^2.8"
mypy = "^0.900"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest]
addopts = "--cov-report html --cov-report term"

[tool.pytest.ini_options]
markers = [
    "timeout",
]
asyncio_mode = "strict"

[tool.coverage.run]
branch = true
omit = [
    "*/setup.py",
    "*/__init__.py",
    ]

[tool.coverage.report]
fail_under = 75

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.mypy]
allow_untyped_decorators = true
disallow_subclassing_any = false
ignore_missing_imports = true
strict = true
warn_unreachable = true
warn_unused_ignores = false
plugins = "pydantic.mypy"

[tool.ruff]
ignore = [
    "E501", # LineTooLong: Let black take care of
    "F401", # UnusedImport: We are using pylint 'ignore' comments for it
    "F821", # UndefinedName: We are using pylint 'ignore' comments for it
    "F841", # UnusedVariable: We are using pylint 'ignore' comments for it
    "A003", # BuiltinAttributeShadowing: Unnecessary restriction (not a source of confusion)
]

[tool.pylint]
    [tool.pylint.master]
    enable = "all"
    disable = [
        "attribute-defined-outside-init",
        "broad-except",
        "duplicate-code",
        "import-error",
        "inconsistent-return-statements",
        "invalid-name",
        "line-too-long", # We already have this in black.
        "locally-disabled", # We know what we are doing, necessary to load plugins in runtime
        "logging-fstring-interpolation", # We want a good-to-read logging interface
        "missing-class-docstring",
        "missing-function-docstring",
        "missing-module-docstring",
        "no-member", # Some members are created in runtime, pylint fails to detect such cases
        "no-name-in-module", # Names can be generated in runtime
        "protected-access", # Necessary for internal tests
        "suppressed-message",
        "too-few-public-methods", # We know what kind of architecture we want
        "too-many-public-methods", # Wrappers will have multiple public methods
        "useless-super-delegation", # Fails to check it properly
        "wildcard-import", # Necessary to locate installed plugins
        "wrong-import-position",
        ]

    [tool.pylint.miscellaneous]
    notes = [ "FIXME" ] # TODO is removed for internal development